// Generated by view binder compiler. Do not edit!
package tk.glucodata.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import tk.glucodata.R;
import tk.glucodata.measuredgrid;

public final class BluesensorBinding implements ViewBinding {
  @NonNull
  private final measuredgrid rootView;

  @NonNull
  public final CheckBox android13;

  @NonNull
  public final Button background;

  @NonNull
  public final TextView bluestate;

  @NonNull
  public final Button close;

  @NonNull
  public final TextView confail;

  @NonNull
  public final TextView connection;

  @NonNull
  public final TextView constatus;

  @NonNull
  public final TextView consuccess;

  @NonNull
  public final TextView deviceaddress;

  @NonNull
  public final Button finish;

  @NonNull
  public final TextView glucosefailure;

  @NonNull
  public final TextView glucoseinfo;

  @NonNull
  public final TextView glucosesuccess;

  @NonNull
  public final measuredgrid grid;

  @NonNull
  public final Button help;

  @NonNull
  public final Button info;

  @NonNull
  public final TextView keyfailure;

  @NonNull
  public final TextView keyinfo;

  @NonNull
  public final TextView keysuccess;

  @NonNull
  public final Button locationpermission;

  @NonNull
  public final CheckBox priority;

  @NonNull
  public final TextView rssi;

  @NonNull
  public final TextView scan;

  @NonNull
  public final Spinner sensors;

  @NonNull
  public final TextView stage;

  @NonNull
  public final CheckBox streamhistory;

  @NonNull
  public final TextView streaming;

  @NonNull
  public final TextView textView2;

  @NonNull
  public final TextView textView3;

  @NonNull
  public final TextView textView4;

  @NonNull
  public final CheckBox usebluetooth;

  private BluesensorBinding(@NonNull measuredgrid rootView, @NonNull CheckBox android13,
      @NonNull Button background, @NonNull TextView bluestate, @NonNull Button close,
      @NonNull TextView confail, @NonNull TextView connection, @NonNull TextView constatus,
      @NonNull TextView consuccess, @NonNull TextView deviceaddress, @NonNull Button finish,
      @NonNull TextView glucosefailure, @NonNull TextView glucoseinfo,
      @NonNull TextView glucosesuccess, @NonNull measuredgrid grid, @NonNull Button help,
      @NonNull Button info, @NonNull TextView keyfailure, @NonNull TextView keyinfo,
      @NonNull TextView keysuccess, @NonNull Button locationpermission, @NonNull CheckBox priority,
      @NonNull TextView rssi, @NonNull TextView scan, @NonNull Spinner sensors,
      @NonNull TextView stage, @NonNull CheckBox streamhistory, @NonNull TextView streaming,
      @NonNull TextView textView2, @NonNull TextView textView3, @NonNull TextView textView4,
      @NonNull CheckBox usebluetooth) {
    this.rootView = rootView;
    this.android13 = android13;
    this.background = background;
    this.bluestate = bluestate;
    this.close = close;
    this.confail = confail;
    this.connection = connection;
    this.constatus = constatus;
    this.consuccess = consuccess;
    this.deviceaddress = deviceaddress;
    this.finish = finish;
    this.glucosefailure = glucosefailure;
    this.glucoseinfo = glucoseinfo;
    this.glucosesuccess = glucosesuccess;
    this.grid = grid;
    this.help = help;
    this.info = info;
    this.keyfailure = keyfailure;
    this.keyinfo = keyinfo;
    this.keysuccess = keysuccess;
    this.locationpermission = locationpermission;
    this.priority = priority;
    this.rssi = rssi;
    this.scan = scan;
    this.sensors = sensors;
    this.stage = stage;
    this.streamhistory = streamhistory;
    this.streaming = streaming;
    this.textView2 = textView2;
    this.textView3 = textView3;
    this.textView4 = textView4;
    this.usebluetooth = usebluetooth;
  }

  @Override
  @NonNull
  public measuredgrid getRoot() {
    return rootView;
  }

  @NonNull
  public static BluesensorBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static BluesensorBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.bluesensor, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static BluesensorBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.android13;
      CheckBox android13 = ViewBindings.findChildViewById(rootView, id);
      if (android13 == null) {
        break missingId;
      }

      id = R.id.background;
      Button background = ViewBindings.findChildViewById(rootView, id);
      if (background == null) {
        break missingId;
      }

      id = R.id.bluestate;
      TextView bluestate = ViewBindings.findChildViewById(rootView, id);
      if (bluestate == null) {
        break missingId;
      }

      id = R.id.close;
      Button close = ViewBindings.findChildViewById(rootView, id);
      if (close == null) {
        break missingId;
      }

      id = R.id.confail;
      TextView confail = ViewBindings.findChildViewById(rootView, id);
      if (confail == null) {
        break missingId;
      }

      id = R.id.connection;
      TextView connection = ViewBindings.findChildViewById(rootView, id);
      if (connection == null) {
        break missingId;
      }

      id = R.id.constatus;
      TextView constatus = ViewBindings.findChildViewById(rootView, id);
      if (constatus == null) {
        break missingId;
      }

      id = R.id.consuccess;
      TextView consuccess = ViewBindings.findChildViewById(rootView, id);
      if (consuccess == null) {
        break missingId;
      }

      id = R.id.deviceaddress;
      TextView deviceaddress = ViewBindings.findChildViewById(rootView, id);
      if (deviceaddress == null) {
        break missingId;
      }

      id = R.id.finish;
      Button finish = ViewBindings.findChildViewById(rootView, id);
      if (finish == null) {
        break missingId;
      }

      id = R.id.glucosefailure;
      TextView glucosefailure = ViewBindings.findChildViewById(rootView, id);
      if (glucosefailure == null) {
        break missingId;
      }

      id = R.id.glucoseinfo;
      TextView glucoseinfo = ViewBindings.findChildViewById(rootView, id);
      if (glucoseinfo == null) {
        break missingId;
      }

      id = R.id.glucosesuccess;
      TextView glucosesuccess = ViewBindings.findChildViewById(rootView, id);
      if (glucosesuccess == null) {
        break missingId;
      }

      measuredgrid grid = (measuredgrid) rootView;

      id = R.id.help;
      Button help = ViewBindings.findChildViewById(rootView, id);
      if (help == null) {
        break missingId;
      }

      id = R.id.info;
      Button info = ViewBindings.findChildViewById(rootView, id);
      if (info == null) {
        break missingId;
      }

      id = R.id.keyfailure;
      TextView keyfailure = ViewBindings.findChildViewById(rootView, id);
      if (keyfailure == null) {
        break missingId;
      }

      id = R.id.keyinfo;
      TextView keyinfo = ViewBindings.findChildViewById(rootView, id);
      if (keyinfo == null) {
        break missingId;
      }

      id = R.id.keysuccess;
      TextView keysuccess = ViewBindings.findChildViewById(rootView, id);
      if (keysuccess == null) {
        break missingId;
      }

      id = R.id.locationpermission;
      Button locationpermission = ViewBindings.findChildViewById(rootView, id);
      if (locationpermission == null) {
        break missingId;
      }

      id = R.id.priority;
      CheckBox priority = ViewBindings.findChildViewById(rootView, id);
      if (priority == null) {
        break missingId;
      }

      id = R.id.rssi;
      TextView rssi = ViewBindings.findChildViewById(rootView, id);
      if (rssi == null) {
        break missingId;
      }

      id = R.id.scan;
      TextView scan = ViewBindings.findChildViewById(rootView, id);
      if (scan == null) {
        break missingId;
      }

      id = R.id.sensors;
      Spinner sensors = ViewBindings.findChildViewById(rootView, id);
      if (sensors == null) {
        break missingId;
      }

      id = R.id.stage;
      TextView stage = ViewBindings.findChildViewById(rootView, id);
      if (stage == null) {
        break missingId;
      }

      id = R.id.streamhistory;
      CheckBox streamhistory = ViewBindings.findChildViewById(rootView, id);
      if (streamhistory == null) {
        break missingId;
      }

      id = R.id.streaming;
      TextView streaming = ViewBindings.findChildViewById(rootView, id);
      if (streaming == null) {
        break missingId;
      }

      id = R.id.textView2;
      TextView textView2 = ViewBindings.findChildViewById(rootView, id);
      if (textView2 == null) {
        break missingId;
      }

      id = R.id.textView3;
      TextView textView3 = ViewBindings.findChildViewById(rootView, id);
      if (textView3 == null) {
        break missingId;
      }

      id = R.id.textView4;
      TextView textView4 = ViewBindings.findChildViewById(rootView, id);
      if (textView4 == null) {
        break missingId;
      }

      id = R.id.usebluetooth;
      CheckBox usebluetooth = ViewBindings.findChildViewById(rootView, id);
      if (usebluetooth == null) {
        break missingId;
      }

      return new BluesensorBinding((measuredgrid) rootView, android13, background, bluestate, close,
          confail, connection, constatus, consuccess, deviceaddress, finish, glucosefailure,
          glucoseinfo, glucosesuccess, grid, help, info, keyfailure, keyinfo, keysuccess,
          locationpermission, priority, rssi, scan, sensors, stage, streamhistory, streaming,
          textView2, textView3, textView4, usebluetooth);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
