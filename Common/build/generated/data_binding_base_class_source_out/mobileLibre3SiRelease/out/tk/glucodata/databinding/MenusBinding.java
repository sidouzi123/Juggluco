// Generated by view binder compiler. Do not edit!
package tk.glucodata.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.GridLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import tk.glucodata.R;

public final class MenusBinding implements ViewBinding {
  @NonNull
  private final GridLayout rootView;

  @NonNull
  public final Button about;

  @NonNull
  public final CheckBox amounts;

  @NonNull
  public final Button close;

  @NonNull
  public final CheckBox darkmode;

  @NonNull
  public final Button date;

  @NonNull
  public final Button dayback;

  @NonNull
  public final Button daylater;

  @NonNull
  public final Button export;

  @NonNull
  public final CheckBox glucosefloat;

  @NonNull
  public final CheckBox history;

  @NonNull
  public final Button lastscan;

  @NonNull
  public final Button list;

  @NonNull
  public final CheckBox meals;

  @NonNull
  public final CheckBox menus;

  @NonNull
  public final GridLayout menusview;

  @NonNull
  public final Button mirror;

  @NonNull
  public final Button newamount;

  @NonNull
  public final Button now;

  @NonNull
  public final CheckBox scans;

  @NonNull
  public final Button search;

  @NonNull
  public final Button sensor;

  @NonNull
  public final Button settings;

  @NonNull
  public final Button statistics;

  @NonNull
  public final CheckBox stream;

  @NonNull
  public final CheckBox systemui;

  @NonNull
  public final Button talk;

  @NonNull
  public final Button watch;

  @NonNull
  public final Button weekback;

  @NonNull
  public final Button weeklater;

  private MenusBinding(@NonNull GridLayout rootView, @NonNull Button about,
      @NonNull CheckBox amounts, @NonNull Button close, @NonNull CheckBox darkmode,
      @NonNull Button date, @NonNull Button dayback, @NonNull Button daylater,
      @NonNull Button export, @NonNull CheckBox glucosefloat, @NonNull CheckBox history,
      @NonNull Button lastscan, @NonNull Button list, @NonNull CheckBox meals,
      @NonNull CheckBox menus, @NonNull GridLayout menusview, @NonNull Button mirror,
      @NonNull Button newamount, @NonNull Button now, @NonNull CheckBox scans,
      @NonNull Button search, @NonNull Button sensor, @NonNull Button settings,
      @NonNull Button statistics, @NonNull CheckBox stream, @NonNull CheckBox systemui,
      @NonNull Button talk, @NonNull Button watch, @NonNull Button weekback,
      @NonNull Button weeklater) {
    this.rootView = rootView;
    this.about = about;
    this.amounts = amounts;
    this.close = close;
    this.darkmode = darkmode;
    this.date = date;
    this.dayback = dayback;
    this.daylater = daylater;
    this.export = export;
    this.glucosefloat = glucosefloat;
    this.history = history;
    this.lastscan = lastscan;
    this.list = list;
    this.meals = meals;
    this.menus = menus;
    this.menusview = menusview;
    this.mirror = mirror;
    this.newamount = newamount;
    this.now = now;
    this.scans = scans;
    this.search = search;
    this.sensor = sensor;
    this.settings = settings;
    this.statistics = statistics;
    this.stream = stream;
    this.systemui = systemui;
    this.talk = talk;
    this.watch = watch;
    this.weekback = weekback;
    this.weeklater = weeklater;
  }

  @Override
  @NonNull
  public GridLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static MenusBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static MenusBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup parent,
      boolean attachToParent) {
    View root = inflater.inflate(R.layout.menus, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static MenusBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.about;
      Button about = ViewBindings.findChildViewById(rootView, id);
      if (about == null) {
        break missingId;
      }

      id = R.id.amounts;
      CheckBox amounts = ViewBindings.findChildViewById(rootView, id);
      if (amounts == null) {
        break missingId;
      }

      id = R.id.close;
      Button close = ViewBindings.findChildViewById(rootView, id);
      if (close == null) {
        break missingId;
      }

      id = R.id.darkmode;
      CheckBox darkmode = ViewBindings.findChildViewById(rootView, id);
      if (darkmode == null) {
        break missingId;
      }

      id = R.id.date;
      Button date = ViewBindings.findChildViewById(rootView, id);
      if (date == null) {
        break missingId;
      }

      id = R.id.dayback;
      Button dayback = ViewBindings.findChildViewById(rootView, id);
      if (dayback == null) {
        break missingId;
      }

      id = R.id.daylater;
      Button daylater = ViewBindings.findChildViewById(rootView, id);
      if (daylater == null) {
        break missingId;
      }

      id = R.id.export;
      Button export = ViewBindings.findChildViewById(rootView, id);
      if (export == null) {
        break missingId;
      }

      id = R.id.glucosefloat;
      CheckBox glucosefloat = ViewBindings.findChildViewById(rootView, id);
      if (glucosefloat == null) {
        break missingId;
      }

      id = R.id.history;
      CheckBox history = ViewBindings.findChildViewById(rootView, id);
      if (history == null) {
        break missingId;
      }

      id = R.id.lastscan;
      Button lastscan = ViewBindings.findChildViewById(rootView, id);
      if (lastscan == null) {
        break missingId;
      }

      id = R.id.list;
      Button list = ViewBindings.findChildViewById(rootView, id);
      if (list == null) {
        break missingId;
      }

      id = R.id.meals;
      CheckBox meals = ViewBindings.findChildViewById(rootView, id);
      if (meals == null) {
        break missingId;
      }

      id = R.id.menus;
      CheckBox menus = ViewBindings.findChildViewById(rootView, id);
      if (menus == null) {
        break missingId;
      }

      GridLayout menusview = (GridLayout) rootView;

      id = R.id.mirror;
      Button mirror = ViewBindings.findChildViewById(rootView, id);
      if (mirror == null) {
        break missingId;
      }

      id = R.id.newamount;
      Button newamount = ViewBindings.findChildViewById(rootView, id);
      if (newamount == null) {
        break missingId;
      }

      id = R.id.now;
      Button now = ViewBindings.findChildViewById(rootView, id);
      if (now == null) {
        break missingId;
      }

      id = R.id.scans;
      CheckBox scans = ViewBindings.findChildViewById(rootView, id);
      if (scans == null) {
        break missingId;
      }

      id = R.id.search;
      Button search = ViewBindings.findChildViewById(rootView, id);
      if (search == null) {
        break missingId;
      }

      id = R.id.sensor;
      Button sensor = ViewBindings.findChildViewById(rootView, id);
      if (sensor == null) {
        break missingId;
      }

      id = R.id.settings;
      Button settings = ViewBindings.findChildViewById(rootView, id);
      if (settings == null) {
        break missingId;
      }

      id = R.id.statistics;
      Button statistics = ViewBindings.findChildViewById(rootView, id);
      if (statistics == null) {
        break missingId;
      }

      id = R.id.stream;
      CheckBox stream = ViewBindings.findChildViewById(rootView, id);
      if (stream == null) {
        break missingId;
      }

      id = R.id.systemui;
      CheckBox systemui = ViewBindings.findChildViewById(rootView, id);
      if (systemui == null) {
        break missingId;
      }

      id = R.id.talk;
      Button talk = ViewBindings.findChildViewById(rootView, id);
      if (talk == null) {
        break missingId;
      }

      id = R.id.watch;
      Button watch = ViewBindings.findChildViewById(rootView, id);
      if (watch == null) {
        break missingId;
      }

      id = R.id.weekback;
      Button weekback = ViewBindings.findChildViewById(rootView, id);
      if (weekback == null) {
        break missingId;
      }

      id = R.id.weeklater;
      Button weeklater = ViewBindings.findChildViewById(rootView, id);
      if (weeklater == null) {
        break missingId;
      }

      return new MenusBinding((GridLayout) rootView, about, amounts, close, darkmode, date, dayback,
          daylater, export, glucosefloat, history, lastscan, list, meals, menus, menusview, mirror,
          newamount, now, scans, search, sensor, settings, statistics, stream, systemui, talk,
          watch, weekback, weeklater);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
