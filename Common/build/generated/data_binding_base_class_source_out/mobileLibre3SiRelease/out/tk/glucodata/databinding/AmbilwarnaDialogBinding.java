// Generated by view binder compiler. Do not edit!
package tk.glucodata.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import tk.glucodata.R;
import yuku.ambilwarna.AmbilWarnaSquare;

public final class AmbilwarnaDialogBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final ImageView ambilwarnaCursor;

  @NonNull
  public final ImageView ambilwarnaTarget;

  @NonNull
  public final RelativeLayout ambilwarnaViewContainer;

  @NonNull
  public final ImageView ambilwarnaViewHue;

  @NonNull
  public final AmbilWarnaSquare ambilwarnaViewSatBri;

  @NonNull
  public final Button closeambi;

  @NonNull
  public final Button helpambi;

  private AmbilwarnaDialogBinding(@NonNull RelativeLayout rootView,
      @NonNull ImageView ambilwarnaCursor, @NonNull ImageView ambilwarnaTarget,
      @NonNull RelativeLayout ambilwarnaViewContainer, @NonNull ImageView ambilwarnaViewHue,
      @NonNull AmbilWarnaSquare ambilwarnaViewSatBri, @NonNull Button closeambi,
      @NonNull Button helpambi) {
    this.rootView = rootView;
    this.ambilwarnaCursor = ambilwarnaCursor;
    this.ambilwarnaTarget = ambilwarnaTarget;
    this.ambilwarnaViewContainer = ambilwarnaViewContainer;
    this.ambilwarnaViewHue = ambilwarnaViewHue;
    this.ambilwarnaViewSatBri = ambilwarnaViewSatBri;
    this.closeambi = closeambi;
    this.helpambi = helpambi;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static AmbilwarnaDialogBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static AmbilwarnaDialogBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.ambilwarna_dialog, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static AmbilwarnaDialogBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ambilwarna_cursor;
      ImageView ambilwarnaCursor = ViewBindings.findChildViewById(rootView, id);
      if (ambilwarnaCursor == null) {
        break missingId;
      }

      id = R.id.ambilwarna_target;
      ImageView ambilwarnaTarget = ViewBindings.findChildViewById(rootView, id);
      if (ambilwarnaTarget == null) {
        break missingId;
      }

      RelativeLayout ambilwarnaViewContainer = (RelativeLayout) rootView;

      id = R.id.ambilwarna_viewHue;
      ImageView ambilwarnaViewHue = ViewBindings.findChildViewById(rootView, id);
      if (ambilwarnaViewHue == null) {
        break missingId;
      }

      id = R.id.ambilwarna_viewSatBri;
      AmbilWarnaSquare ambilwarnaViewSatBri = ViewBindings.findChildViewById(rootView, id);
      if (ambilwarnaViewSatBri == null) {
        break missingId;
      }

      id = R.id.closeambi;
      Button closeambi = ViewBindings.findChildViewById(rootView, id);
      if (closeambi == null) {
        break missingId;
      }

      id = R.id.helpambi;
      Button helpambi = ViewBindings.findChildViewById(rootView, id);
      if (helpambi == null) {
        break missingId;
      }

      return new AmbilwarnaDialogBinding((RelativeLayout) rootView, ambilwarnaCursor,
          ambilwarnaTarget, ambilwarnaViewContainer, ambilwarnaViewHue, ambilwarnaViewSatBri,
          closeambi, helpambi);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
